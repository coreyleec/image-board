* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    
  }
  

  div.modal-header {
    background-color: coral;
    z-index:9999;
  
    }
     
    div.modal-content {
       border-radius: 13px; 
      z-index:9999;
      background-color: gainsboro;
      width: min-content;
      padding-bottom: 10px;
    }
    .modal {
      /* border-radius: 13px;
      padding:5px;
      z-index:9999;
      width: 400px;
      background-color: coral; */
      position: fixed;
      z-index:9999;
      top :0;
      left:0;
      right:0;
      bottom:0;
      background: #464b5e;
      color: white;
      outline: none;
      padding: 3.2rem;
      text-align: center;
    }
    div.modal-header {
      background-color: coral;
      }
    div.modal-content form {
      padding:5px;
    }
    
    div.modal-content form button {  
      float: right;
      z-index:9999;
  
    }
  
  .modal img {
    width: 600px;
    
  }
  /* .thumbnail{
    overflow: hidden;
    height: 157px;
  } */




  import React, { useEffect, useState, useRef } from "react";
import { Modal } from "react-bootstrap";
import styled from 'styled-components'
import { MdClose } from 'react-icons/md'
const PhotoModal = (props) => {
  return (
    <Background>
      <ModalWrapper>
        <ModalImg src={props.photo.url}
        />
            FUCKLIFE
      </ModalWrapper>
    </Background>
  );
};

export default PhotoModal;

const Background = styled.div`
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    position: fixed;
    display: flex;
    justify-content: center;
    align-items: center;`

const ModalWrapper = styled.div`
    width: 800px;
    height: auto;
    box-shadow: 0 5px 16px rgba(0m 0m 0m 0.2);
    background: #fff;
    color: #000;
    /* display: grid;
    grid-template-columns: 1fr 1fr; */
    position: relative;
    border-radius: 10px;`

const ModalImg = styled.img`
    /* z-index: 10; */
    z-index: 9999;
    width: 100%;
    /* height: auto; */
    margin-inline-size: 150px;
    border-radius: 10px 0 0 10px;
    background: #000;`

const ModelContent = styled.div`
    display: flex;
    flex-direction: column;
    justify-content: center;
    line-height: 1.8;
    color: #141414;
    p { margin-bottom: 1rem; }
    button {
        padding: 10px 24px;
        background: #141414;
        color: #fff;
        border: none;
    }
    `
const CloseModalButton = styled(MdClose)`
    cursor: pointer;
    position: absolute;
    top: 20px;
    right: 20px; 
    width: 32px;
    height: 32px;
    padding: 0;
    z-index: 10;`

import React, { useEffect, useState, useRef } from 'react'
import { Modal } from "react-bootstrap";

const ModalPhoto = () => {
    return (
        <div>
{/* PHOTO MODAL */}
              {/* {openPhoto ?  */}
            <Modal className="modal"
            isOpen={openPhoto}
            onHide={modalToggle}
            data-toggle="modal" data-backdrop="static" data-keyboard="false"
        >
            <Modal.Header>
                <button  className="modalBtn"  
                onClick={() => setOpenPhoto(!openPhoto)}
                >X</button>
                </Modal.Header> 
                <p>{photo.name}</p>
                <p>{photo.details}</p>
                <img 
                
                src={photo.url}></img>
                </Modal> 
                {/* // : null */}
        </div>
    )
}

export default ModalPhoto





 /* div.modal-content form button {  
    float: right;
    z-index:9999;

  } */
  div.modal-content {
    width: min-content;
    /* width: 100%;
    height: 100%; */

}
.modal-name-cont {
  /* flex: 1 1 0; */

  }
.modal-img-cont {
  /* flex: 2 1 0; */

/* max-width: min-content; */
}
.modal-details-cont {
  /* flex: 1 1 0; */

}
.modal img {
  /* max-height: 100%; */
  /* width: 100%; */

  /* object-fit: contain; */
  width: 500px;
  max-width: 100%;
  min-height: 50%;
  /* max-height: min-content;  */
  /* justify-self: center; */
  /* height: minmax; */
  /* overflow: none; */
}








const nextPhoto = (initialPhoto) => {
    let newPhotoArr = photos.filter(photo => photo.index === initialPhoto.index + 1)
    // let endPhoto = startPhoto.firstIndex
    let newPhoto = newPhotoArr[0]
    console.log("newPhoto", newPhoto)
    setPhoto(newPhoto)
  }

  const previousPhoto = (initialPhoto) => {
    let newPhoto = photos.find(photo => photo.index === initialPhoto - 1)
    setPhoto(newPhoto)
  }


  return (
    <>

     <Modal
          
          show={openModal}
          onHide={modalToggle}
          data-toggle="modal"
          // aria-labelledby="example-modal-sizes-title-sm"

          // data-backdrop="static"
          // data-keyboard="false"
        >
          <button className="exit-modal-button" onClick={() => modalToggle()}>
            x
          </button>
          <div className="next-buttons">
            <button
              onClick={() => nextPhoto(photo)}
              className="next-button-right"
            >
              {">"}
            </button>
            <button
              onClick={() => previousPhoto(photo)}
              className="next-button-left"
            >
              {"<"}
            </button>
          </div>

          {photo != undefined && 
          // photo.url != null ? 
          (
          <ModelContent>
            <div className="modal-name-cont">
              <h1>{photo.name}</h1>
            </div>
            <div className="modal-img-cont">
              <img src={photo.url}></img>
            </div>
            <div className="modal-details-cont">
              <p>{photo.content}</p>
            </div>
          </ModelContent>


          )}
          </Modal>